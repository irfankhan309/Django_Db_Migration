
1. database migrations from sqlit3 to PostGresql  locally with test project
	a. dump the db data from sqlit3 to a new json file for backup
		for that we have to run 
		> python manage.py dumpdata > dbdump.json
		Note: It will create a new json file in project level location which is nothing but db data in json 
	b. install Postgresql locally in machine

	c. on django  project install required packages for postgresql and connectors
			packages : postgresql - psycopg2 

            ex: > pip install psycopg2
            
			configure in django project settings.py
				DATABASES = {
					'default': {
							'ENGINE': 'django.db.backends.postgresql_psycopg2',
							'NAME': 'test',
							'USER': 'postgres',
							'PASSWORD': 'postgres',
							'HOST':'localhost',
							'PORT':'5432 ',
							}
						}
	d. once configations done we have to run
			> python manage.py migrate --run-syncdb
			
	e. the from the project console only we have to run 
			> python manage.py loaddata dbdump.json 
			
	f. now connect the postgresql by opening PGAdmin and create a new connection server there with required username,password, dbname, endpoint then 
		>  if db is not there already create a new database with same name which is configured in django project settings 
		>  then open db in postgresql and check whether the tables and data migrated or not...
		
